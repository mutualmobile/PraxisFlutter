# This is basic workflow to help you get started with Actions

name: Build,Test Release app to Firebase Hosting
on:
  push:
    branches:
      - master

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build_android:
    runs-on: ubuntu-latest

    steps:
      - name: Export Release Timestamp
        run: echo "APP_VERSION=release_$(date +'%Y-%m-%d_%H-%m-%S')" >> $GITHUB_ENV

      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      - name: 'Run flutter pub get'
        run: flutter pub get
      - name: 'Run Test(s)'
        run: flutter test
      - name: 'Build Android Apk'
        run: flutter clean && flutter build apk --release
      - name: Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1.3.2
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: developers
          file: build/app/outputs/flutter-apk/app-release.apk

  build_ios:
    name: Build iOS
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7'

      - name: Install Java
        uses: actions/setup-java@v1
        with:
          java-version: '12.x'

      - name: Install Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: 'stable'

      - name: Install iOS Gems
        working-directory: ${{ github.workspace }}/ios
        run: bundle install

      - name: Install iOS Certificate and Profile
        working-directory: ${{ github.workspace }}/ios
        run: bundle exec fastlane install_certificate_and_profile
        env:
          APP_STORE_CONNECT_KEY_ID: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
          APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          APP_STORE_CONNECT_KEY_CONTENT: ${{ secrets.APP_STORE_CONNECT_KEY_CONTENT }}
          TEMP_KEYCHAIN_USER: ${{ secrets.TEMP_KEYCHAIN_USER }}
          TEMP_KEYCHAIN_PASSWORD: ${{ secrets.TEMP_KEYCHAIN_PASSWORD }}
          GIT_AUTHORIZATION: ${{ secrets.GIT_AUTHORIZATION }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}

      - name: Set Xcode version
        working-directory: ${{ github.workspace }}/ios
        run: bundle exec fastlane set_xcode_version

      - name: Build IPA
        working-directory: ${{ github.workspace }}
        run: flutter build ipa --export-options-plist=$GITHUB_WORKSPACE/ios/exportOptions.plist

      - name: Print iPA Folder
        working-directory: ${{ github.workspace }}/build/ios/ipa
        run: ls *.ipa

      - name: Distribute iOS Beta App
        working-directory: ${{ github.workspace }}/ios
        run: bundle exec fastlane distribute_ios_app
        env:
          FIREBASE_CLI_TOKEN: ${{ secrets.FIREBASE_CLI_TOKEN }}
          FIREBASE_APP_ID_IOS: ${{ secrets.FIREBASE_APP_ID_IOS }}
          IOS_TESTERS: ${{ secrets.IOS_TESTERS }}

  # This workflow contains a single job called "build"
  build_deploy_web:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      - name: 'Run flutter pub get'
        run: flutter pub get
      - name: 'Run Test(s)'
        run: flutter test
      - name: Enable flutter web
        run: flutter config --enable-web
      - name: 'Build Web App'
        run: flutter build web
      - name: deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build/web
      - name: Deploy to Firebase Hosting
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}